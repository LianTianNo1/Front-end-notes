(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{569:function(e,t,r){"use strict";r.r(t);var a=r(13),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("p",[r("a",{attrs:{href:"https://camo.githubusercontent.com/5cc23f334a157924dd674adc0f6733a08bb16e591a9d1d7affce93ed4bfbe91b/68747470733a2f2f75706c6f61642d696d616765732e6a69616e7368752e696f2f75706c6f61645f696d616765732f31323839303831392d396630386131616265643264376361662e706e673f696d6167654d6f6772322f6175746f2d6f7269656e742f7374726970253743696d61676556696577322f322f772f31323430",target:"_blank",rel:"noopener noreferrer"}},[r("img",{attrs:{src:"https://camo.githubusercontent.com/5cc23f334a157924dd674adc0f6733a08bb16e591a9d1d7affce93ed4bfbe91b/68747470733a2f2f75706c6f61642d696d616765732e6a69616e7368752e696f2f75706c6f61645f696d616765732f31323839303831392d396630386131616265643264376361662e706e673f696d6167654d6f6772322f6175746f2d6f7269656e742f7374726970253743696d61676556696577322f322f772f31323430",alt:"JavaScript 数据结构与算法之美"}}),r("OutboundLink")],1)]),e._v(" "),r("h2",{attrs:{id:"前言"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),r("blockquote",[r("p",[e._v("算法为王。")])]),e._v(" "),r("blockquote",[r("p",[e._v("想学好前端，先练好内功，内功不行，就算招式练的再花哨，终究成不了高手；只有内功深厚者，前端之路才会走得更远。")])]),e._v(" "),r("p",[e._v("强烈推荐 GitHub 上值得前端学习的数据结构与算法项目，包含 gif 图的演示过程与视频讲解。")]),e._v(" "),r("h2",{attrs:{id:"github-项目"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#github-项目"}},[e._v("#")]),e._v(" GitHub 项目")]),e._v(" "),r("h3",{attrs:{id:"数据结构与算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据结构与算法"}},[e._v("#")]),e._v(" 数据结构与算法")]),e._v(" "),r("p",[e._v("关于数据结构与算法的 GitHub 项目，star 数由高到低排序。")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/trekhleb/javascript-algorithms",target:"_blank",rel:"noopener noreferrer"}},[e._v("javascript-algorithms（51.3k）"),r("OutboundLink")],1),e._v("\n该仓库包含了多种基于 JavaScript 的算法与数据结构，提供进一步阅读的解释和链接。\n每种算法和数据结构都有自己的 README，包含相关说明和链接，以便进一步阅读 (还有 YouTube 视频) 。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/imhuay/Algorithm_Interview_Notes-Chinese",target:"_blank",rel:"noopener noreferrer"}},[e._v("Algorithm_Interview_Notes-Chinese（24.6k）"),r("OutboundLink")],1),e._v("\n2018/2019/校招/春招/秋招/算法/机器学习(Machine Learning)/深度学习(Deep Learning)/自然语言处理(NLP)/C/C++/Python/面试笔记")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/algorithm-visualizer/algorithm-visualizer",target:"_blank",rel:"noopener noreferrer"}},[e._v("algorithm-visualizer（23k）"),r("OutboundLink")],1),e._v("\n算法可视化工具是一个交互式的在线平台，可以从代码中可视化算法。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/raywenderlich/swift-algorithm-club",target:"_blank",rel:"noopener noreferrer"}},[e._v("swift-algorithm-club（20.8k）"),r("OutboundLink")],1),e._v("\n算法和数据结构迅速，有解释 ！")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/keon/algorithms",target:"_blank",rel:"noopener noreferrer"}},[e._v("algorithms（15.4k）"),r("OutboundLink")],1),e._v("\nPython中数据结构和算法的最小示例。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/wangzheng0822/algo",target:"_blank",rel:"noopener noreferrer"}},[e._v("algo（8.3k）"),r("OutboundLink")],1),e._v("\n数据结构和算法必知必会的50个代码实现。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/tayllan/awesome-algorithms",target:"_blank",rel:"noopener noreferrer"}},[e._v("awesome-algorithms（6.4k）"),r("OutboundLink")],1),e._v("\n一份很棒的学习和/或练习算法的地方的整理清单。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/jeffgerickson/algorithms",target:"_blank",rel:"noopener noreferrer"}},[e._v("algorithms"),r("OutboundLink")],1),e._v("\n对Jeff的算法书、笔记等进行错误跟踪")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/mgechev/javascript-algorithms",target:"_blank",rel:"noopener noreferrer"}},[e._v("javascript-algorithms（5.4k）"),r("OutboundLink")],1),e._v("\n此存储库包含不同著名计算机科学算法的 javascript 实现。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/nonstriater/Learn-Algorithms",target:"_blank",rel:"noopener noreferrer"}},[e._v("Learn-Algorithms（3.8k）"),r("OutboundLink")],1),e._v("\n算法学习笔记。\n"),r("a",{attrs:{href:"https://github.com/liuxinyu95/AlgoXY",target:"_blank",rel:"noopener noreferrer"}},[e._v("AlgoXY（3.8k）"),r("OutboundLink")],1),e._v("\n基本算法和数据结构手册。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/hustcc/JS-Sorting-Algorithm",target:"_blank",rel:"noopener noreferrer"}},[e._v("JS-Sorting-Algorithm（2.9k）"),r("OutboundLink")],1),e._v("\n一本关于排序算法的 GitBook 在线书籍 《十大经典排序算法》，使用 JavaScript & Python & Go & Java 实现。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/search?l=JavaScript&o=desc&q=algo&s=stars&type=Repositories",target:"_blank",rel:"noopener noreferrer"}},[e._v("JavaScript 更多 ..."),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/search?o=desc&p=1&q=algo&s=stars&type=Repositories",target:"_blank",rel:"noopener noreferrer"}},[e._v("其他语言，更多 ..."),r("OutboundLink")],1)])]),e._v(" "),r("h3",{attrs:{id:"leetcode"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#leetcode"}},[e._v("#")]),e._v(" leetcode")]),e._v(" "),r("p",[e._v("关于数据结构与算法的 GitHub 项目，star 数由高到低排序。")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/MisterBooo/LeetCodeAnimation",target:"_blank",rel:"noopener noreferrer"}},[e._v("LeetCodeAnimation（36k）"),r("OutboundLink")],1),e._v("\n用动画的形式呈现解LeetCode题目的思路。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/azl397985856/leetcode",target:"_blank",rel:"noopener noreferrer"}},[e._v("leetcode（13.6k）"),r("OutboundLink")],1),e._v("\nleetcode 题解，记录自己的leetcode解题之路。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/haoel/leetcode",target:"_blank",rel:"noopener noreferrer"}},[e._v("leetcode（11.2k）"),r("OutboundLink")],1),e._v("\nleetcode 问题解决方案。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/soulmachine/leetcode",target:"_blank",rel:"noopener noreferrer"}},[e._v("leetcode（7.7k）"),r("OutboundLink")],1),e._v("\nLeetCode题解，151道题完整版。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/Blankj/awesome-java-leetcode",target:"_blank",rel:"noopener noreferrer"}},[e._v("awesome-java-leetcode（6.2k）"),r("OutboundLink")],1),e._v("\nLeetCode算法与Java解决方案（更新）。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/jdneo/vscode-leetcode/blob/master/docs/README_zh-CN.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("vscode-leetcode（4.1k）"),r("OutboundLink")],1),e._v("\n在 VS Code 中练习 LeetCode。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/awangdev/LintCode",target:"_blank",rel:"noopener noreferrer"}},[e._v("LintCode（3.4k）"),r("OutboundLink")],1),e._v("\nLintCode/LeetCode 的 Java 解决方法。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/billryan/algorithm-exercise",target:"_blank",rel:"noopener noreferrer"}},[e._v("algorithm-exercise（2.6k）"),r("OutboundLink")],1),e._v("\n数据结构与算法/leetcode/lintcode题解/")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/search?o=desc&p=1&q=leetcode&s=stars&type=Repositories",target:"_blank",rel:"noopener noreferrer"}},[e._v("更多 ..."),r("OutboundLink")],1)])]),e._v(" "),r("h2",{attrs:{id:"算法可视化工具"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#算法可视化工具"}},[e._v("#")]),e._v(" 算法可视化工具")]),e._v(" "),r("ul",[r("li",[e._v("算法可视化工具 "),r("a",{attrs:{href:"https://github.com/algorithm-visualizer/algorithm-visualizer",target:"_blank",rel:"noopener noreferrer"}},[e._v("algorithm-visualizer"),r("OutboundLink")],1),e._v("\n算法可视化工具 algorithm-visualizer 是一个交互式的在线平台，可以从代码中可视化算法，还可以看到代码执行的过程。")])]),e._v(" "),r("p",[e._v("效果如下图。")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://camo.githubusercontent.com/727acd44a209c65e115cfb72482990e01a5a832e7c845f6acf4061027be8416d/68747470733a2f2f75706c6f61642d696d616765732e6a69616e7368752e696f2f75706c6f61645f696d616765732f31323839303831392d306166373739363135656537666332372e6769663f696d6167654d6f6772322f6175746f2d6f7269656e742f7374726970",target:"_blank",rel:"noopener noreferrer"}},[r("img",{attrs:{src:"https://camo.githubusercontent.com/727acd44a209c65e115cfb72482990e01a5a832e7c845f6acf4061027be8416d/68747470733a2f2f75706c6f61642d696d616765732e6a69616e7368752e696f2f75706c6f61645f696d616765732f31323839303831392d306166373739363135656537666332372e6769663f696d6167654d6f6772322f6175746f2d6f7269656e742f7374726970",alt:"算法可视化工具"}}),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("旨在通过交互式可视化的执行来揭示算法背后的机制。")]),e._v(" "),r("ul",[r("li",[e._v("算法可视化来源 https://visualgo.net/en\n效果如下图。\n"),r("a",{attrs:{href:"https://camo.githubusercontent.com/8556943c2efefe2770546caef11c345c36f69019400706cf3fcc811640c6635e/68747470733a2f2f75706c6f61642d696d616765732e6a69616e7368752e696f2f75706c6f61645f696d616765732f31323839303831392d363631626637353734316466376339612e6769663f696d6167654d6f6772322f6175746f2d6f7269656e742f7374726970",target:"_blank",rel:"noopener noreferrer"}},[r("img",{attrs:{src:"https://camo.githubusercontent.com/8556943c2efefe2770546caef11c345c36f69019400706cf3fcc811640c6635e/68747470733a2f2f75706c6f61642d696d616765732e6a69616e7368752e696f2f75706c6f61645f696d616765732f31323839303831392d363631626637353734316466376339612e6769663f696d6167654d6f6772322f6175746f2d6f7269656e742f7374726970",alt:"quick-sort.gif"}}),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.ee.ryerson.ca/~courses/coe428/sorting/insertionsort.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.ee.ryerson.ca"),r("OutboundLink")],1)])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://camo.githubusercontent.com/3db01daa177f333571a8bedbd2bc77e08dfa36b4feae246e097fdcc5736ddcea/68747470733a2f2f75706c6f61642d696d616765732e6a69616e7368752e696f2f75706c6f61645f696d616765732f31323839303831392d323435336564633163313965313462382e6769663f696d6167654d6f6772322f6175746f2d6f7269656e742f7374726970",target:"_blank",rel:"noopener noreferrer"}},[r("img",{attrs:{src:"https://camo.githubusercontent.com/3db01daa177f333571a8bedbd2bc77e08dfa36b4feae246e097fdcc5736ddcea/68747470733a2f2f75706c6f61642d696d616765732e6a69616e7368752e696f2f75706c6f61645f696d616765732f31323839303831392d323435336564633163313965313462382e6769663f696d6167654d6f6772322f6175746f2d6f7269656e742f7374726970",alt:"insert-sort.gif"}}),r("OutboundLink")],1)]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/skidding/illustrated-algorithms",target:"_blank",rel:"noopener noreferrer"}},[e._v("illustrated-algorithms"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("变量和操作的可视化表示增强了控制流和实际源代码。您可以快速前进和后退执行，以密切观察算法的工作方式。")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://camo.githubusercontent.com/d8dd3bfa2568d1077026c8294b05bd69dc39074f8c7272372671be885d8af0ab/68747470733a2f2f75706c6f61642d696d616765732e6a69616e7368752e696f2f75706c6f61645f696d616765732f31323839303831392d323262643035643839613839616638632e6769663f696d6167654d6f6772322f6175746f2d6f7269656e742f7374726970",target:"_blank",rel:"noopener noreferrer"}},[r("img",{attrs:{src:"https://camo.githubusercontent.com/d8dd3bfa2568d1077026c8294b05bd69dc39074f8c7272372671be885d8af0ab/68747470733a2f2f75706c6f61642d696d616765732e6a69616e7368752e696f2f75706c6f61645f696d616765732f31323839303831392d323262643035643839613839616638632e6769663f696d6167654d6f6772322f6175746f2d6f7269656e742f7374726970",alt:"binary-search.gif"}}),r("OutboundLink")],1)]),e._v(" "),r("h2",{attrs:{id:"javascript-数据结构与算法之美"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#javascript-数据结构与算法之美"}},[e._v("#")]),e._v(" JavaScript 数据结构与算法之美")]),e._v(" "),r("p",[r("strong",[e._v("JavaScript 数据结构与算法之美")]),e._v("系列是笔者写的， 用的语言是 "),r("strong",[e._v("JavaScript")]),e._v(" ，旨在入门数据结构与算法和方便以后复习。")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/biaochenxuying/blog/issues/29",target:"_blank",rel:"noopener noreferrer"}},[e._v("1. JavaScript 数据结构与算法之美 - 时间和空间复杂度"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/biaochenxuying/blog/issues/34",target:"_blank",rel:"noopener noreferrer"}},[e._v("2. JavaScript 数据结构与算法之美 - 线性表（数组、队列、栈、链表）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/biaochenxuying/blog/issues/30",target:"_blank",rel:"noopener noreferrer"}},[e._v("3. JavaScript 数据结构与算法之美 - 实现一个前端路由，如何实现浏览器的前进与后退 ？"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/biaochenxuying/blog/issues/35",target:"_blank",rel:"noopener noreferrer"}},[e._v("4. JavaScript 数据结构与算法之美 - 栈内存与堆内存 、浅拷贝与深拷贝"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/biaochenxuying/blog/issues/36",target:"_blank",rel:"noopener noreferrer"}},[e._v("5. JavaScript 数据结构与算法之美 - 递归"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/biaochenxuying/blog/issues/37",target:"_blank",rel:"noopener noreferrer"}},[e._v("6. JavaScript 数据结构与算法之美 - 非线性表（树、堆）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/biaochenxuying/blog/issues/39",target:"_blank",rel:"noopener noreferrer"}},[e._v("7. JavaScript 数据结构与算法之美 - 冒泡排序、选择排序、插入排序"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/biaochenxuying/blog/issues/40",target:"_blank",rel:"noopener noreferrer"}},[e._v("8. JavaScript 数据结构与算法之美 - 归并排序、快速排序、希尔排序、堆排序"),r("OutboundLink")],1),e._v(" | 精彩待续")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/biaochenxuying/blog/issues/41",target:"_blank",rel:"noopener noreferrer"}},[e._v("9. JavaScript 数据结构与算法之美 - 计数排序、桶排序、基数排序"),r("OutboundLink")],1),e._v(" | 精彩待续")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/biaochenxuying/blog/issues/42",target:"_blank",rel:"noopener noreferrer"}},[e._v("10. JavaScript 数据结构与算法之美 - 十大经典排序汇总"),r("OutboundLink")],1),e._v(" | 精彩待续")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/biaochenxuying/blog/issues/43",target:"_blank",rel:"noopener noreferrer"}},[e._v("11. JavaScript 数据结构与算法之美 - 强烈推荐 GitHub 上值得前端学习的数据结构与算法项目"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=o.exports}}]);